<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.pub.mapper.RiskvaluesMapper" >
  <resultMap id="BaseResultMap" type="com.accp.pub.pojo.Riskvalues" >
    <id column="riskvaluesid" property="riskvaluesid" jdbcType="INTEGER" />
    <result column="riskvaluetype" property="riskvaluetype" jdbcType="VARCHAR" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="operatordate" property="operatordate" jdbcType="TIMESTAMP" />
    <result column="bz" property="bz" jdbcType="VARCHAR" />
    <result column="baz1" property="baz1" jdbcType="VARCHAR" />
    <result column="bz2" property="bz2" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    riskvaluesid, riskvaluetype, operator, operatordate, bz, baz1, bz2
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from riskvalues
    where riskvaluesid = #{riskvaluesid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from riskvalues
    where riskvaluesid = #{riskvaluesid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.accp.pub.pojo.Riskvalues" >
    insert into riskvalues (riskvaluesid, riskvaluetype, operator, 
      operatordate, bz, baz1, 
      bz2)
    values (#{riskvaluesid,jdbcType=INTEGER}, #{riskvaluetype,jdbcType=VARCHAR}, #{operator,jdbcType=VARCHAR}, 
      #{operatordate,jdbcType=TIMESTAMP}, #{bz,jdbcType=VARCHAR}, #{baz1,jdbcType=VARCHAR}, 
      #{bz2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.accp.pub.pojo.Riskvalues" >
    insert into riskvalues
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="riskvaluesid != null" >
        riskvaluesid,
      </if>
      <if test="riskvaluetype != null" >
        riskvaluetype,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operatordate != null" >
        operatordate,
      </if>
      <if test="bz != null" >
        bz,
      </if>
      <if test="baz1 != null" >
        baz1,
      </if>
      <if test="bz2 != null" >
        bz2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="riskvaluesid != null" >
        #{riskvaluesid,jdbcType=INTEGER},
      </if>
      <if test="riskvaluetype != null" >
        #{riskvaluetype,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatordate != null" >
        #{operatordate,jdbcType=TIMESTAMP},
      </if>
      <if test="bz != null" >
        #{bz,jdbcType=VARCHAR},
      </if>
      <if test="baz1 != null" >
        #{baz1,jdbcType=VARCHAR},
      </if>
      <if test="bz2 != null" >
        #{bz2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.pub.pojo.Riskvalues" >
    update riskvalues
    <set >
      <if test="riskvaluetype != null" >
        riskvaluetype = #{riskvaluetype,jdbcType=VARCHAR},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatordate != null" >
        operatordate = #{operatordate,jdbcType=TIMESTAMP},
      </if>
      <if test="bz != null" >
        bz = #{bz,jdbcType=VARCHAR},
      </if>
      <if test="baz1 != null" >
        baz1 = #{baz1,jdbcType=VARCHAR},
      </if>
      <if test="bz2 != null" >
        bz2 = #{bz2,jdbcType=VARCHAR},
      </if>
    </set>
    where riskvaluesid = #{riskvaluesid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.pub.pojo.Riskvalues" >
    update riskvalues
    set riskvaluetype = #{riskvaluetype,jdbcType=VARCHAR},
      operator = #{operator,jdbcType=VARCHAR},
      operatordate = #{operatordate,jdbcType=TIMESTAMP},
      bz = #{bz,jdbcType=VARCHAR},
      baz1 = #{baz1,jdbcType=VARCHAR},
      bz2 = #{bz2,jdbcType=VARCHAR}
    where riskvaluesid = #{riskvaluesid,jdbcType=INTEGER}
  </update>
</mapper>